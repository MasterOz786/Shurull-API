name: Shurull API CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov flake8
          
      - name: Run tests
        run: |
          pytest --cov=src tests/
          
      # - name: Lint
        # run: flake8 src tests

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Build Docker image
        run: docker build -t shurull-api .
        
      # - name: Run security scan
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: 'shurull-api:latest'
      #     format: 'table'
      #     exit-code: '1'
      #     ignore-unfixed: true
      #     severity: 'CRITICAL,HIGH'

  deploy-staging:
    needs: build
    if: github.ref == 'refs/heads/develop'  # Use 'develop' for staging
    runs-on: ubuntu-latest
    steps:
      - name: Check if SSH private key is set
        run: |
          if [ -z "${{ secrets.SSH_SHURULAPI_KEY }}" ]; then
            echo "SSH_PRIVATE_KEY is not set"
            exit 1
          else
            echo "SSH_PRIVATE_KEY is detected"
          fi
      - name: Deploy to staging
        uses: appleboy/ssh-action@master
        with:
          host: 15.235.184.251
          username: ubuntu
          key: ${{ secrets.SSH_SHURULAPI_KEY }}
          script: |
            source /home/ubuntu/Shurulls/bin/activate
            cd /home/ubuntu/Shurulls/Shurull-API-Staging
            git fetch --all
            git reset --hard origin/develop
            docker-compose -f docker-compose.staging.yml down  # Stop and remove existing containers
            docker-compose -f docker-compose.staging.yml up -d --build  # Start new containers

  deploy-production:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: 15.235.184.251
          username: ubuntu
          key: ${{ secrets.SSH_SHURULAPI_KEY }}
          script: |
            source /home/ubuntu/Shurulls/bin/activate
            cd /home/ubuntu/Shurulls/Shurull-API
            git fetch --all
            git reset --hard origin/main
            docker compose down  # Stop and remove existing containers
            docker compose up -d --build  # Start new containers

            name: Generate a build and push to another branch

  deploy-hostinger:
    runs-on: ubuntu-latest
    name: Build and Push
    steps:
      - name: git-checkout
        uses: actions/checkout@v3

      - name: Install all dependencies
        run: npm install

      - name: Build
        run: npm run build # The build command of your project

      - name: Push
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          FOLDER: dist
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}